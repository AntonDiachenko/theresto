import React from 'react';
import {useEffect, useState} from "react";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import axios from "axios";
import { useNavigate } from "react-router-dom"; 
import {useParams} from "react-router-dom";


function Userupdate() {
    const navigate = useNavigate();
    const [userObject, setUserObject] = useState([]);
    const {id} = useParams();
    // setUserObject({ username: "", email: "", phone: "", role: "" });
    // const [authState, setAuthState] = useState({
    //     username: "",
    //     email: "",
    //     phone: "",
    //     role: "user",
    //   });


    useEffect(
        ()=>{
    //     if (!localStorage.getItem("accessToken")) {
    //       navigate("/login");
    //   } else {
        axios.get(`http://localhost:3001/auth/byId/${id}` ,{
            // headers: {
            //     accessToken: localStorage.getItem("accessToken"),
            //         },
            }
                ).then((response)=>{
                setUserObject(response.data);
                // ({
                //     username:  response.data.username,
                //     email:  response.data.email,
                //     phone: response.data.phone ,
                //     role: response.data.role
                //     });
                });
            }
        );
      

        // const initialValues = {
        //     username: "",
        //     email:"",
        //     phone:"",
        //     role:"user"
        // };
    

        const update = () => {
            axios.put(`http://localhost:3001/auth/update/${id}`, {
                username:  userObject.username,
                    email:  userObject.email,
                    phone: userObject.phone ,
                    role: userObject.role
            }
            ).then((response) => {
              navigate("/usermanage");
            });
          };


          const [userName, setUserName] = useState([]);
          const [email, setEmail] = useState([]);
          const [phone, setPhone] = useState([]);
          const [role, setRole] = useState([]);

  return (
    <div>
      <div className="">
      
      <h1>Update Info:{userObject.username}</h1>
        {/* <div className='form'>
          <label>User Name:</label>
          <input type = "text" name = "userName" onChange={(e)=>{
            setUserName(e.target.value) 
          }}>{userObject.username}</input>
          <label>Email:</label>
          <input type = "text" name = "email" onChange={(e)=>{
            setEmail(e.target.value)
          }}/>
          <label>Phone:</label>
          <input type = "text" name = "phone" onChange={(e)=>{
            setPhone(e.target.value)
          }}/>
          <label>Role:</label>
          <input type = "text" name = "role" onChange={(e)=>{
            setRole(e.target.value)
          }}/>

            <button onClick={()=>{
            update({
                username: userName,
                email: email,
                phone: phone,
                role: role
            })
            }}>Update</button>
            </div> */}
        
            </div>
















       
      </div>
   
  )
}

export default Userupdate















import React from "react";
import { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useParams } from "react-router-dom";

function Itemmanage() {

  const { id } = useParams();

  const [listOfMenuitems, setListOfMenuitems] = useState([]);
  const [listOfCategories, setListOfCategories] = useState([]);
  let navigate = useNavigate();
  

  useEffect(() => {
    if (!localStorage.getItem("accessToken")) {
      navigate("/login");
    } else {
      axios.get(`http://localhost:3001/menu`).then((response) => {
        setListOfMenuitems(response.data);
      });

    };

    if (!localStorage.getItem("accessToken")) {
      navigate("/login");
    } else {
      axios.get(`http://localhost:3001/category`).then((response) => {
        setListOfCategories(response.data);
      });

    };

  }, []);



  const text = "";
                    document.getElementById("newcategory").innerHTML= text;

  return (

    
    <div class="d-flex  container col-12 mb-5">
      <div class="col-3 mx-5">
          <table class="table" name="categories">
              <thead>
                <tr>
                  <th className="flex-column col-1">name</th>
                </tr>

                {listOfCategories.map((value, key) => {
                  return (
                    <tr>
                      <td className="col-1" onClick={() => {
                        axios.get(`http://localhost:3001/menu/byId/${value.id}`).then((response) => {
                          setListOfMenuitems(response.data);
                        });
                  
                }}><a>{value.name}</a></td>
                    </tr>
                  );
                })}
                <tr id = "newcategory"></tr>
                <tr>
                  {/* <input type="text" name="name" placeholder="New Category+"/>
                  
                   <button onClick={()=>{
                        axios.post(`http://localhost:3001/category`).then((response) => {
                          navigate(0);
                        });
                      }}
                    ></button> */}
                  {/* navigate("/newcategory"); */}
            
                </tr>
              </thead>
            </table>
      </div>

      <div class="col-9 mx-5">
            <div className="row">
              <h2 className="col">Item List:</h2>
              <button
                className="btn btn-sm  btn-outline-danger  col-2"
                onClick={() => {
                  navigate("/newitem");
                }}
              >
                New Item
              </button>
            </div>

            <table class="table  col-9" name="menuitems">
              <thead>
                <tr>
                  <th className="col-1 flex-column">description</th>
                  <th className="col-1 flex-column">price</th>
                  <th className="col-2 flex-column">photoURL</th>
                </tr>

                {listOfMenuitems.map((value, key) => {
                  return (
                    <tr>
                      <td className="col-1">{value.description}</td>
                      <td className="col-1">{value.price}</td>
                      <td className="col-2">{value.photoURL}</td>
                    </tr>
                  );
                })}
              </thead>
            </table>
      </div>
    </div>
  )
}

export default Itemmanage













import React from "react";
import { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useParams } from "react-router-dom";
// Bootstrap CSS
import "bootstrap/dist/css/bootstrap.min.css";
// Bootstrap Bundle JS
import "bootstrap/dist/js/bootstrap.bundle.min";


function Itemmanage() {

  const { id } = useParams();
  const [name, setName] = useState("");
  const [listOfMenuitems, setListOfMenuitems] = useState([]);
  const [listOfCategories, setListOfCategories] = useState([]);
  let navigate = useNavigate();
  

  useEffect(() => {
    if (!localStorage.getItem("accessToken")) {
      navigate("/login");
    } else {
      axios.get(`http://localhost:3001/menu`).then((response) => {
        setListOfMenuitems(response.data);
      });

    };

    if (!localStorage.getItem("accessToken")) {
      navigate("/login");
    } else {
      axios.get(`http://localhost:3001/category`).then((response) => {
        setListOfCategories(response.data);
      });

    };

  }, []);

  const NewCategory = () => {
    axios.post("http://localhost:3001/category", {
      name: name,
  
    }).then(() => {
      navigate(0);
    });
  };

  const deleteCategory = (id)=>{
    if (!localStorage.getItem("accessToken")) {
        navigate("/login");
    } else {
    axios.delete(`http://localhost:3001/category/delete/${id}`
    , {
    headers: { accessToken: localStorage.getItem("accessToken") },
  }
  ).then((response)=>{
    navigate(0);
    });
  }
}


  return (
    <div class="d-flex  container col-12 mb-5">
      <div class="col-3 mx-5">
          <table class="table" name="categories">
              <thead>
                <tr>
                  <th className="flex-column col-1">Categories</th>
                </tr>

                {listOfCategories.map((value, key) => {
                  return (
                    <tr>
                      <td className="col-6" onClick={() => {
                        axios.get(`http://localhost:3001/menu/byId/${value.id}`).then((response) => {
                          setListOfMenuitems(response.data);
                        });
                  
                        }}><a>{value.name}</a></td>
                      <button className='btn btn-sm  btn-outline-danger col-6' onClick={()=>{deleteCategory(value.id)}}>Delete</button>
                      <button className='btn btn-sm  btn-outline-danger col-6' onClick={()=>{}}>update</button>

                    </tr>
                  );
                })}
              
                <tr >
                  <div className="row">
                  <td className="col"><input className="col" type="text" name="name" onChange={(e) => {
            setName(e.target.value);
          }} placeholder="New Category+"></input>
                   </td>
                   <button type="submit" className="btn btn-sm btn-secondary col-4 " 
                     onClick={NewCategory}
                   >New</button>
                   </div>
                </tr>
              </thead>
            </table>
      </div>

      <div class="col-9 mx-5">
            <div className="row">
              <h2 className="col">Item List:</h2>
              <button
                className="btn btn-sm  btn-outline-danger  col-2"
                onClick={() => {
                  navigate("/newitem");
                }}
              >
                New Item
              </button>
            </div>

            <table class="table  col-9" name="menuitems">
              <thead>
                <tr>
                  <th className="col-1 flex-column">description</th>
                  <th className="col-1 flex-column">price</th>
                  <th className="col-2 flex-column">photoURL</th>
                </tr>

                {listOfMenuitems.map((value, key) => {
                  return (
                    <tr>
                      <td className="col-1">{value.description}</td>
                      <td className="col-1">{value.price}</td>
                      <td className="col-2">{value.photoURL}</td>
                    </tr>
                  );
                })}
              </thead>
            </table>
      </div>
    </div>
  )
}

export default Itemmanage
