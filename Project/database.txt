users
- userId
- name
- email
- password
- phone
- role ENUM('user','admin')



categories
- categoryId
- name



menuItems
- menuItemId
- categoryId FK to categories.categoryId
- description VC
- price DECIMAL(10,2)



cart ?
a) find a react library that uses local storage to keep cart contents
b) add cartItems table to the backend



cartItems
- id
- userId FK users.userId
- menuItemId FK
- quantity INT



orders
- id
- userId FK users.userId
- dtPlaced DATETIME
- total DECIMAL(10,2)
- paymentInfo VC (Stripe API transaction id)



orderItems
- id
- menuItemId FK menuItems.menuItemId
- description (copy of menuItems.description)
- price DECIMAL(10,2) (copy of menuItems.price)
- quantity INT



menuItems
- menuItemId
- categoryId FK to categories.categoryId
- description VC
- price DECIMAL(10,2)
- photoUrl VC





          
                {(authState.role=="user") ? (<p>user </p>):(<p>admin </p>)
                  
                }
                <p>{authState.username} </p>
                <p>{authState.username}  </p>
                <p>{user.id} w</p>
                <p>{authState.role} s</p>




                import './App.css';
import {BrowserRouter as Router, Route, Routes, Link} from 'react-router-dom';
import Home from "./pages/Home";
import {useEffect, useState} from "react";
import axios from "axios";
import { AuthContext } from "./helper/AuthContext"
import Registration from "./pages/Registration";
import Login from "./pages/Login";
import Menu from "./pages/Menu";
import Usermanage from "./pages/Usermanage";
import Itemmanage from "./pages/Itemmanage";
import Historymanage from "./pages/Historymanage";

function App() {

  const [authState, setAuthState] = useState({
    username: "",
    id: 0,
    status: false,
    role: "",
  });


  // const navigate = useNavigate();
  const logout = () => {
    localStorage.removeItem("accessToken");
    setAuthState({ username: "", id: 0, status: false ,role: "",});
    // navigate("/");
  };

const [user, setUser] = useState({});
  useEffect(() => {
    axios
      .get("http://localhost:3001/auth/auth", {
        headers: {
          accessToken: localStorage.getItem("accessToken"),
        },
      })
      .then((response) => {
        setUser(response.data);
        if (response.data.error) {
          setAuthState({ ...authState, status: false });
        } else {
          setAuthState({
              username: response.data.username,
              id: response.data.id,
              status: true,
              role:response.data.role,
            });
        }
      }
      );
  }, []);

  return (
    <div className="App"> 
      <AuthContext.Provider value={{ authState, setAuthState }}>
        <Router>
        <div className="navbar">
              <div className="links col-8">
                { !authState.status ? (
                  <>
                    <Link to="/"> Home Page</Link>
                    <Link to="/menu"> Menu</Link>
                    <Link to="/contact"> Contact</Link>
                    <Link to="/login"> Login</Link>
                    <Link to="/registration"> Registration</Link>
                  </>
                  ) : ( 
                  (authState.role=="user") ? ( 
                    <>{/* user */}
                    <Link to="/"> Home Page</Link>
                    <Link to="/menu"> Menu</Link>
                    <Link to="/profile"> Contact</Link>
                    <Link to="/fav"> Fav</Link>
                    <Link to="/cart"> Cart</Link>
                    <Link to="/createauction"> Create A Auction</Link>
                    </>
                  ) : ( <>{/* admin */}
                      <Link to="/"> HomePage</Link>
                      <Link to="/menu"> Menu</Link> 
                      <Link to="/contact"> Contact</Link>
                      <Link to="/usermanage"> UserManage</Link>
                      <Link to="/itemmanage"> ItemManage</Link>
                      <Link to="/historymanage"> HistoryManage</Link>
                    </> 
                  )
                  )
                }

              </div>
              <div className="loggedInContainer  col">
                {authState.username}  
                {authState.status && <button className='btn btn-outline-warning' onClick={logout}> Logout</button>}
              </div>
          </div>
          <Routes>
            <Route path="/" element={<Home />} />
            <Route path="/registration" element={<Registration />} />
            <Route path="/login" element={<Login />} />
            <Route path="/menu" element={<Menu />} />
            <Route path="/usermanage" element={<Usermanage />} />
            <Route path="/itemmanage" element={<Itemmanage />} />
            <Route path="/historymanage" element={<Historymanage />} />
          </Routes>
        </Router>
        </AuthContext.Provider>

    </div>
  );
}

export default App;


